image: registry.choerodon.com.cn/tools/cibase:0.5.0

stages:
  - package
  - build

variables:
  GIT_SUBMODULE_STRATEGY: recursive

node-build:
  image: registry.choerodon.com.cn/tools/cifront:0.5.0
  stage: package
  script:
    - node_config
    - node_module_ci
    - node_build
    - clean_cache
  only:
    - /^feature-.*$/


node-dev-build:
  image: registry.choerodon.com.cn/tools/cifront:0.5.0
  stage: package
  script:
    - node_config
    - node_module_ci
    - node_dev_build
    - cache_dist
  only:
    - develop
    - /^release-.*$/
    - /^hotfix-.*$/
    - tags

docker-build:
  stage: build
  script:
    - docker_build
    - clean_cache
    - chart_build
  only:
    - develop
    - /^release-.*$/
    - /^hotfix-.*$/
    - tags

.auto_devops: &auto_devops |
  curl -o .auto_devops.sh \
      "${CHOERODON_URL}/devops/ci?token=${Token}&type=front"
  source .auto_devops.sh

  function node_module_ci() {
    mkdir -p /cache/$CI_PROJECT_NAME-$CI_PROJECT_ID-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA/
    cp -fr ./choerodon-front-devops/devops ./choerodon-front-iam
    cd choerodon-front-iam
    python ./boot/structure/configAuto.py iam devops
    cp -r config.yml /cache/$CI_PROJECT_NAME-$CI_PROJECT_ID-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA/
    chmod 777 ./boot/structure/moduleCi.sh && ./boot/structure/moduleCi.sh boot iam devops
    cd boot
  }

  function node_dev_build() {
    ./node_modules/.bin/gulp start
    npm run devbuild
    find dist -name '*.js' | xargs sed -i "s/localhost:version/$CI_COMMIT_TAG/g"
  }

  function node_build() {
    ./node_modules/.bin/gulp start
    npm run build
    find dist -name '*.js' | xargs sed -i "s/localhost:version/$CI_COMMIT_TAG/g"
  }

  function chart_build(){ 
    CHART_PATH=`find . -maxdepth 3 -name Chart.yaml`
    yq w -i ${CHART_PATH%/*}/values.yaml image.repository ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}
    yq w -i ${CHART_PATH%/*}/values.yaml image.tag ${CI_COMMIT_TAG}
    helm package ${CHART_PATH%/*} --version ${CI_COMMIT_TAG} --app-version ${CI_COMMIT_TAG}
    TEMP=${CHART_PATH%/*}
    FILE_NAME=${TEMP##*/}
    curl -X POST \
        -F "token=${Token}" \
        -F "version=${CI_COMMIT_TAG}" \
        -F "file=@${FILE_NAME}-${CI_COMMIT_TAG}.tgz" \
        -F "commit=${CI_COMMIT_SHA}" \
        -F "image=${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG}" \
        "${API_GATEWAY}/devops/ci"
    if [ $? -ne 0 ]; then
        echo "upload chart error"
        exit 1
    fi
  }

before_script:
  - *auto_devops